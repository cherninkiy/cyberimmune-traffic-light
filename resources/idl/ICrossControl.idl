/** Package with an "ICrossControl" interface declaration.
 * 
 *  The interface describes the cross maintenance functionality.
 */

/* Package with an "ICrossControl" interface declaration. */

package traffic_light.ICrossControl

const UInt32 BehaviorRegulated = 1;
const UInt32 BehaviorUnregulated = 2;
const UInt32 BehaviorManual = 3;

const UInt32 Direction1Red          = 0x0001;
const UInt32 Direction1Yellow       = 0x0002;
const UInt32 Direction1Green        = 0x0004;
const UInt32 Direction1Blink        = 0x0008;

const UInt32 Direction2Red          = 0x0100;
const UInt32 Direction2Yellow       = 0x0200;
const UInt32 Direction2Green        = 0x0400;
const UInt32 Direction2Blink        = 0x0800;

const UInt32 MaxLength = 16;

// Color name or blinking color or their combination.
typedef string<MaxLength> LightsMode;

// Cross shedule
struct CrossSchedule {
    // Behavior
    UInt32 behavior;
    // Cross mode
    UInt32 crossMode;
    // 'green' duration for dir1 if 'regulated' behavior
    UInt32 dir1Duration;
    // 'green' duration for dir2 if 'regulated' behavior 
    UInt32 dir2Duration;
}

interface {
    // The method should implement maintenance for GPIO connected lights components.
    // lights - Cross schedule to set.
    SetCrossSchedule(in CrossSchedule schedule);
}
